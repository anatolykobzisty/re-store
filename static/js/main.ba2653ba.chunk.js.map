{"version":3,"sources":["store.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/spinner/index.js","components/spinner/spiner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-services.js","actions/index.js","utils/index.js","utils/compose.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","index.js"],"names":["timeout","ShopHeader","numItems","total","className","to","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","Spiner","ErrorIndicator","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","booksLoaded","newBooks","type","payload","booksError","error","bookAddedToCart","bookId","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","BookList","books","map","key","id","BookListContainer","this","loading","Component","connect","bookList","bindActionCreators","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","orderTotal","item","idx","count","HomePage","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","next","getState","console","log","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.ba2653ba.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport reducer from './reducers';\n\nconst logMiddleware = ({ getState, dispatch }) => next => action => {\n  console.log(action.type, getState());\n  // next === dispatch\n  return next(action);\n};\n\nconst stringMiddleware = () => next => action => {\n  if (typeof action === 'string') {\n    // next === dispatch\n    return next({ type: action });\n  }\n  return next(action);\n};\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware)\n);\n\nconst delayedActionCreator = timeout => dispatch => {\n  setTimeout(\n    () =>\n      dispatch({\n        type: 'DELAYED_ACTION',\n      }),\n    timeout\n  );\n};\n\nstore.dispatch(delayedActionCreator(3000));\n\nexport default store;\n","import ShopHeader from './shop-header';\n\nexport default ShopHeader;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport './shop-header.css';\nimport { Link } from 'react-router-dom';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">ReStore</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems} items (${total})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport default ShopHeader;\n","import BookListItem from './book-list-item';\n\nexport default BookListItem;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n  const { title, author, price, coverImage } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={coverImage} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{title}</span>\n        <div className=\"book-author\">{author}</div>\n        <div className=\"book-price\">${price}</div>\n        <button onClick={onAddedToCart} className=\"btn btn-info add-to-cart\">\n          Add to cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import Spiner from './spiner';\n\nexport default Spiner;\n","import React from 'react';\nimport './spiner.css';\n\nconst Spiner = () => {\n  return <div>loading...</div>;\n};\n\nexport default Spiner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error</div>;\n};\n\nexport default ErrorIndicator;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer,\n} = React.createContext();\n\nexport { BookstoreServiceProvider, BookstoreServiceConsumer };\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => Wrapped => {\n  return props => {\n    return (\n      <BookstoreServiceConsumer>\n        {bookstoreService => {\n          return <Wrapped {...props} bookstoreService={bookstoreService} />;\n        }}\n      </BookstoreServiceConsumer>\n    );\n  };\n};\n\nexport default withBookstoreService;\n","const booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST',\n  };\n};\n\nconst booksLoaded = newBooks => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks,\n  };\n};\n\nconst booksError = error => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error,\n  };\n};\n\nexport const bookAddedToCart = bookId => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId,\n  };\n};\n\nexport const bookRemovedFromCart = bookId => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId,\n  };\n};\n\nexport const allBooksRemovedFromCart = bookId => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId,\n  };\n};\n\nconst fetchBooksOld = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService\n    .getBooks()\n    .then(data => dispatch(booksLoaded(data)))\n    .catch(err => dispatch(booksError(err)));\n};\n\nconst fetchBooks = bookstoreService => () => dispatch => {\n  dispatch(booksRequested());\n  bookstoreService\n    .getBooks()\n    .then(data => dispatch(booksLoaded(data)))\n    .catch(err => dispatch(booksError(err)));\n};\n\nexport { fetchBooks };\n","import compose from './compose';\n\nexport default compose;\n","const compose = (...funcs) => comp => {\n  return funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport compose from '../../utils';\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {books.map(book => {\n        return (\n          <li key={book.id}>\n            <BookListItem book={book} onAddedToCart={() => onAddedToCart(book.id)} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nclass BookListContainer extends Component {\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n  render() {\n    const { books, loading, error, onAddedToCart } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n    return <BookList books={books} onAddedToCart={onAddedToCart} />;\n  }\n}\n\nconst mapStateToProps = ({ bookList: { books, loading, error } }) => ({\n  books,\n  loading,\n  error,\n});\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n  return bindActionCreators(\n    {\n      fetchBooks: fetchBooks(bookstoreService),\n      onAddedToCart: bookAddedToCart,\n    },\n    dispatch\n  );\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n","import BookList from './book-list';\n\nexport default BookList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart } from '../../actions';\nimport './shopping-cart-table.css';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const { id, title, count, total } = item;\n    return (\n      <tr key={id}>\n        <td>{idx + 1}</td>\n        <td>{title}</td>\n        <td>{count}</td>\n        <td>{total}</td>\n        <td>\n          <button\n            onClick={() => onDelete(id)}\n            className=\"btn btn-outline-danger btn-sm float-right\"\n          >\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button\n            onClick={() => onIncrease(id)}\n            className=\"btn btn-outline-success btn-sm float-right\"\n          >\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button\n            onClick={() => onDecrease(id)}\n            className=\"btn btn-outline-warning btn-sm float-right\"\n          >\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{items.map(renderRow)}</tbody>\n      </table>\n      <div className=\"total\">Total : ${total}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\n  return {\n    items: cartItems,\n    total: orderTotal,\n  };\n};\n\nconst mapDispatchToProps = {\n  onIncrease: bookAddedToCart,\n  onDecrease: bookRemovedFromCart,\n  onDelete: allBooksRemovedFromCart,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import ShoppingCartTable from './shopping-cart-table';\n\nexport default ShoppingCartTable;\n","import React from 'react';\nimport BookList from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookList />\n      <ShoppingCartTable />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <div>Cart Page</div>;\n};\n\nexport default CartPage;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopHeader from '../shop-header';\nimport { HomePage, CartPage } from '../pages';\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210} />\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/cart\" component={CartPage} exact />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nclass ErrorBoundry extends Component {\n  state = { hasError: false };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","export default class BookstoreService {\n  data = [\n    {\n      id: 1,\n      title: 'Production-Ready Microservices',\n      author: 'Susan J. Fowler',\n      price: 32,\n      coverImage:\n        'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg',\n    },\n    {\n      id: 2,\n      title: 'Release It!',\n      author: 'Michael T. Nygard',\n      price: 45,\n      coverImage:\n        'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg',\n    },\n  ];\n  getBooks() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.75) {\n          reject(new Error('Someting bad happened'));\n        } else {\n          resolve(this.data);\n        }\n      }, 700);\n    });\n  }\n}\n","const updateBookList = (state, action) => {\n  if (state === undefined) {\n    return {\n      books: [],\n      loading: true,\n      error: null,\n    };\n  }\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        books: [],\n        loading: true,\n        error: null,\n      };\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        books: action.payload,\n        loading: false,\n        error: null,\n      };\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        books: [],\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return state.bookList;\n  }\n};\n\nexport default updateBookList;\n","const updateCartItems = (cartItems, item, idx) => {\n  if (item.count === 0) {\n    return [...cartItems.slice(0, idx), ...cartItems.slice(idx + 1)];\n  }\n\n  if (idx === -1) {\n    return [...cartItems, item];\n  }\n\n  return [...cartItems.slice(0, idx), item, ...cartItems.slice(idx + 1)];\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n  const { id = book.id, count = 0, title = book.title, total = 0 } = item;\n\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity * book.price,\n  };\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n  const {\n    bookList: { books },\n    shoppingCart: { cartItems },\n  } = state;\n\n  const book = books.find(({ id }) => id === bookId);\n  const itemIndex = cartItems.findIndex(({ id }) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  const newItem = updateCartItem(book, item, quantity);\n\n  return {\n    orderTotal: 0,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex),\n  };\n};\n\nconst updateShoppingCart = (state, action) => {\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0,\n    };\n  }\n\n  switch (action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.shoppingCart.cartItems.find(({ id }) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;\n","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\nconst reducer = (state, action) => {\n  return {\n    bookList: updateBookList(state, action),\n    shoppingCart: updateShoppingCart(state, action),\n  };\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}